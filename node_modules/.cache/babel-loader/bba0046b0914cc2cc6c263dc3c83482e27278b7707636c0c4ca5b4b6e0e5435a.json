{"ast":null,"code":"var _jsxFileName = \"/home/ricky/Development/Phase 2/REACT/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AddTransactionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddTransactionForm() {\n  _s();\n  const [formData, setFormData] = useState({});\n  const [date, setDate] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  function handleSubmit(e) {\n    e.preventDefault();\n    const transactionObj = {\n      date: date,\n      descripton: description,\n      category: category,\n      amount: amount\n    };\n  }\n  fetch(\"http://localhost:8001/transactions\"), {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(transactionObj).then(res => res.json()).then(transaction => addTransaction(transaction))\n  };\n  function handleChange(e) {\n    const key = e.target.name;\n    const value = e.target.value;\n    setFormData({\n      ...formData,\n      [key]: value\n    });\n    console.log(formData);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          type: \"date\",\n          name: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          type: \"text\",\n          name: \"category\",\n          placeholder: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Amount\",\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(AddTransactionForm, \"cIpp0G+TJ49Ih2PqvdzVgQBg4vc=\");\n_c = AddTransactionForm;\nexport default AddTransactionForm;\nvar _c;\n$RefreshReg$(_c, \"AddTransactionForm\");","map":{"version":3,"names":["React","useState","AddTransactionForm","formData","setFormData","date","setDate","category","setCategory","handleSubmit","e","preventDefault","transactionObj","descripton","description","amount","fetch","method","headers","body","JSON","stringify","then","res","json","transaction","addTransaction","handleChange","key","target","name","value","console","log"],"sources":["/home/ricky/Development/Phase 2/REACT/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AddTransactionForm.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction AddTransactionForm() {\n    const [formData, setFormData] = useState({})\n    const [date, setDate] = useState(\"\")\n    const [category, setCategory] = useState(\"\")\n    \n\n      \n\n    function handleSubmit(e){\n      e.preventDefault();\n      const transactionObj = {\n        date: date,\n        descripton: description,\n        category: category,\n        amount: amount,\n      }\n\n  }\n\n  fetch(\"http://localhost:8001/transactions\"), {\n        method: \"POST\",\n        headers: {\n           \"Content-Type\": \"application/json\",\n         },\n         body: JSON.stringify(transactionObj)\n\n        .then((res)=> res.json())\n        .then((transaction) => addTransaction(transaction))\n}\n\n  function handleChange(e){\n    const key = e.target.name\n    const  value = e.target.value\n    setFormData({...formData, [key]: value})\n    console.log(formData)\n \n   }\n\n  return (\n    <div className=\"ui segment\">\n      <form className=\"ui form\" onSubmit={handleSubmit}>\n        <div className=\"inline fields\">\n          <input onChange = { handleChange } type=\"date\" name=\"date\" />\n          <input onChange = { handleChange }type=\"text\" name=\"description\" placeholder=\"Description\" />\n          <input onChange = { handleChange } type=\"text\" name=\"category\" placeholder=\"Category\" />\n          <input onChange = { handleChange } type=\"number\" name=\"amount\" placeholder=\"Amount\" step=\"0.01\" />\n        </div>\n        <button className=\"ui button\" type=\"submit\">\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,SAASC,kBAAkB,GAAG;EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAK5C,SAASQ,YAAY,CAACC,CAAC,EAAC;IACtBA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,cAAc,GAAG;MACrBP,IAAI,EAAEA,IAAI;MACVQ,UAAU,EAAEC,WAAW;MACvBP,QAAQ,EAAEA,QAAQ;MAClBQ,MAAM,EAAEA;IACV,CAAC;EAEL;EAEAC,KAAK,CAAC,oCAAoC,CAAC,EAAE;IACvCC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACN,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,cAAc,CAAC,CAEpCU,IAAI,CAAEC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACxBF,IAAI,CAAEG,WAAW,IAAKC,cAAc,CAACD,WAAW,CAAC;EAC1D,CAAC;EAEC,SAASE,YAAY,CAACjB,CAAC,EAAC;IACtB,MAAMkB,GAAG,GAAGlB,CAAC,CAACmB,MAAM,CAACC,IAAI;IACzB,MAAOC,KAAK,GAAGrB,CAAC,CAACmB,MAAM,CAACE,KAAK;IAC7B3B,WAAW,CAAC;MAAC,GAAGD,QAAQ;MAAE,CAACyB,GAAG,GAAGG;IAAK,CAAC,CAAC;IACxCC,OAAO,CAACC,GAAG,CAAC9B,QAAQ,CAAC;EAEtB;EAED,oBACE;IAAK,SAAS,EAAC,YAAY;IAAA,uBACzB;MAAM,SAAS,EAAC,SAAS;MAAC,QAAQ,EAAEM,YAAa;MAAA,wBAC/C;QAAK,SAAS,EAAC,eAAe;QAAA,wBAC5B;UAAO,QAAQ,EAAKkB,YAAc;UAAC,IAAI,EAAC,MAAM;UAAC,IAAI,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAG,eAC7D;UAAO,QAAQ,EAAKA,YAAc;UAAA,IAAI,EAAC,MAAM;UAAC,IAAI,EAAC,aAAa;UAAC,WAAW,EAAC;QAAa;UAAA;UAAA;UAAA;QAAA,QAAG,eAC7F;UAAO,QAAQ,EAAKA,YAAc;UAAC,IAAI,EAAC,MAAM;UAAC,IAAI,EAAC,UAAU;UAAC,WAAW,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG,eACxF;UAAO,QAAQ,EAAKA,YAAc;UAAC,IAAI,EAAC,QAAQ;UAAC,IAAI,EAAC,QAAQ;UAAC,WAAW,EAAC,QAAQ;UAAC,IAAI,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAC9F,eACN;QAAQ,SAAS,EAAC,WAAW;QAAC,IAAI,EAAC,QAAQ;QAAA,UAAC;MAE5C;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GArDQzB,kBAAkB;AAAA,KAAlBA,kBAAkB;AAuD3B,eAAeA,kBAAkB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}